class Requisition{constructor(){this.url="http://localhost:3000"}setUrl(t,e){this.url="http://localhost:3000",this.url+=t+e}makeRequisition(t="/indicadores",e=""){return this.setUrl(t,e),fetch(this.url).then((t=>t.json()))}}class Form{constructor(){this.isValid=!1,this.inputs=document.getElementsByClassName("form"),this.formData=[]}validateForm(){let t=0;for(let e of this.inputs)e.classList.remove("invalid-input"),e.nextElementSibling.innerText="",isNaN(e.value)&&(e.classList.add("invalid-input"),e.nextElementSibling.innerText="Valor inválido! Apenas números!",t++),""!==e.value&&" "!==e.value||(e.classList.add("invalid-input"),e.nextElementSibling.innerText="O campo não pode ser vazio!",t++);this.isValid=!(t>0)}getFormData(){this.validateForm();const t=document.getElementsByName("indexing"),e=document.getElementsByName("yield");if(this.formData=[["tipoRendimento","tipoIndexacao"]],this.isValid){let a=[];for(let t of e)t.checked&&a.push(t.value);for(let e of t)e.checked&&a.push(e.value);return this.formData.push(a),this.formData}}setDefaultFields(t){for(let e of t)document.getElementById(e[0]).defaultValue=e[1]+"%"}}class DataFormatter{constructor(){this.form=new Form,this.chart=new Chart,this.view=new View}formatGraphData(t){return t.then((t=>{let e=[["Meses","Sem Aporte","Com Aporte"]];const{semAporte:a,comAporte:i}=t[0].graficoValores;for(let t in i)e.push([t,a[t],i[t]]);this.chart.drawChart(e)}))}formatIndicatorsData(t){t.then((t=>{let e=[];for(let a in t)e.push([t[a].nome,t[a].valor]);this.form.setDefaultFields(e)}))}formatSimulationInfoData(t){t.then((t=>{const{valorFinalBruto:e,aliquotaIR:a,valorPagoIR:i,valorTotalInvestido:o,valorFinalLiquido:s,ganhoLiquido:r}=t[0];let n=["R$ "+e,a+" %","R$ "+i,"R$ "+s,"R$ "+o,"R$ "+r];this.view.setSimulationInfoHTML(n)}))}}class Chart{constructor(){this.chartOptions={},this.chartData={}}setChartData(t){this.chartData=google.visualization.arrayToDataTable(t)}setChartOptions(){this.chartOptions=[{isStacked:!0,legend:"bottom",width:"100%",height:400,colors:["#000000","#ED8E53"],bar:{groupWidth:"85%"},vAxis:{title:"Tempo (em meses)"},hAxis:{title:"Valor (R$)"}},{isStacked:!0,legend:"bottom",width:"85%",height:200,colors:["#000000","#ED8E53"],chartArea:{left:60,width:"85%"},bar:{groupWidth:"85%"},hAxis:{title:"Tempo (em meses)"},vAxis:{title:"Valor (R$)"}}]}drawChart(t){this.setChartData(t),this.setChartOptions();let e=new google.visualization.ColumnChart(document.getElementById("graph-column"));new google.visualization.BarChart(document.getElementById("graph-bar")).draw(this.chartData,this.chartOptions[0]),e.draw(this.chartData,this.chartOptions[1])}}class View{setSimulationInfoHTML(t){const e=document.querySelectorAll(".info > span");for(const[a,i]of e.entries())i.innerText=t[a]}}class Controller{constructor(){this.requisition=new Requisition,this.form=new Form,this.dataFormatter=new DataFormatter,this.chart=new Chart,this.view=new View}getFormData(){return this.form.getFormData()}setIndicators(t="/indicadores",e=""){const a=this.requisition.makeRequisition(t,e);this.dataFormatter.formatIndicatorsData(a)}setSimulation(){const t=this.getFormData(),e=`?tipoRendimento=${t[1][0]}&tipoIndexacao=${t[1][1]}`,a=this.requisition.makeRequisition("/simulacoes",e);this.dataFormatter.formatGraphData(a),this.dataFormatter.formatSimulationInfoData(a)}}google.charts.load("current",{packages:["corechart"]});const controller=new Controller;controller.setIndicators(),document.getElementById("submit-btn").addEventListener("click",(t=>{controller.setSimulation()}));