class Requisition{constructor(){this.url="http://localhost:3000"}setUrl(t,e){this.url="http://localhost:3000",this.url+=t+e}makeRequisition(t="/indicadores",e=""){return this.setUrl(t,e),fetch(this.url).then((t=>t.json()))}}class Form{constructor(){this.isValid=!1,this.inputs=document.getElementsByClassName("form"),this.formData=[]}validateForm(){let t=0;for(let e of this.inputs)e.classList.remove("invalid-input"),e.nextElementSibling.innerText="",parseFloat(e.value)||(e.classList.add("invalid-input"),e.nextElementSibling.innerText="Valor inválido! Apenas números!",t++);this.isValid=!(t>0)}getFormData(){this.validateForm();const t=document.getElementsByName("indexing"),e=document.getElementsByName("yield");if(this.formData=[["tipoRendimento","tipoIndexacao"]],this.isValid){let a=[];for(let t of e)t.checked&&a.push(t.value);for(let e of t)e.checked&&a.push(e.value);return this.formData.push(a),this.formData}}setDefaultFields(t){for(let e of JSON.parse(t))document.getElementById(e[0]).defaultValue=e[1]+"%"}}class DataFormatter{formatSimulationData(t){t.then((t=>{let e=[["Meses","Sem Aporte","Com Aporte"]];const{semAporte:a,comAporte:i}=t[0].graficoValores;for(let t in i)e.push([t,a[t],i[t]]);localStorage.setItem("simulations",JSON.stringify(e))}))}formatIndicatorsData(t){t.then((t=>{let e=[];for(let a in t)e.push([t[a].nome,t[a].valor]);localStorage.setItem("indicators",JSON.stringify(e))}))}}class Chart{constructor(){this.chartOptions={},this.chartData={}}setChartData(){this.chartData=new google.visualization.arrayToDataTable(JSON.parse(localStorage.simulations))}setChartOptions(){this.chartOptions=[{isStacked:!0,legend:"bottom",width:"100%",height:400,colors:["#000000","#ED8E53"],bar:{groupWidth:"85%"},vAxis:{title:"Tempo (em meses)"},hAxis:{title:"Valor (R$)"}},{isStacked:!0,legend:"bottom",width:"85%",height:200,colors:["#000000","#ED8E53"],chartArea:{left:60,width:"85%"},bar:{groupWidth:"85%"},hAxis:{title:"Tempo (em meses)"},vAxis:{title:"Valor (R$)"}}]}drawChart(){this.setChartData(),this.setChartOptions();let t=new google.visualization.ColumnChart(document.getElementById("graph-column"));new google.visualization.BarChart(document.getElementById("graph-bar")).draw(this.chartData,this.chartOptions[0]),t.draw(this.chartData,this.chartOptions[1])}}class Controller{constructor(){this.requisition=Requisition(),this.form=Form(),this.dataFormatter=DataFormatter(),this.chart=Chart()}validateForm(){}makeRequisition(t="/indicadores",e){}formatData(t){}drawChart(){}}